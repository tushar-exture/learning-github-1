Testing GIT versioning


version 0.1 : GIT is initiated

version 0.2 : This file is updated and should be staged and commited for use

version 0.3 : Oops! I forgot a small change, so now I should have v0.2 in staged and v0.3 in working area. SUCCESS!!! visually confirmed through MASTER branch history.

version 0.4 : .ignorefile will ignore all the files from commiting to git repo. This is an essential function of github.

version 0.5 : How to see git diff works, this command is added to test the verbose nature of git diff. SUCCESS !!!

version 0.6 : This version of the file is not staged but edited. The Status , Diff and Diff -cached will give different results than above version. SUCCESS!!!

version 0.7 : Skip staging area and direct add with -a option on commit

version 0.8 : Did lots of log testing, now onward to amending a commit. Staged. A line was added and removed using CHECKOUT command . SUCCESS!!!

version 0.9 : This file is now hosted and shared by A san and B san together. This task is too stage and commit from 2 different users. SUCCESS from A san. B san changes are here now. SUCCESS!!

version 1.0 : Task a.sharing is over.

version 1.1 : Task b of inserting 10 files at the same time from different folder. All the files from different folder are commited. SUCCESS!!!

version 2.0 : Task b over. 10 files from diferent folder with folders were shared on the github

version 2.1 : Task c to check the difference in the version of Repo and local including comments and commits.
